<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/batch 
	http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<batch:job id="importProduct">
		<batch:listeners>
			<batch:listener ref="importProductsJobListener" />
		</batch:listeners>
		<batch:validator ref="importProductParamValidator" />
		<batch:step id="decompress" next="readWriteProducts">
			<batch:tasklet ref="decompressTasklet" />
		</batch:step>	
		<batch:step id="readWriteProducts" next="cleanUp" >
			<batch:tasklet start-limit="3" allow-start-if-complete="true" >
				<batch:listeners>
					<batch:listener ref="importProductStepSkipListener" />
				</batch:listeners>
				<batch:chunk reader="reader" writer="writer" commit-interval="100" skip-limit="5">
					<batch:skippable-exception-classes>
						<batch:include class="org.springframework.batch.item.file.FlatFileParseException"/>
					</batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
		<batch:step id="cleanUp">
			<batch:tasklet ref="cleanUpTasklet" />
		</batch:step>
	</batch:job>
	
	<bean id="importProductsJobListener"
		class="es.vikour.sbia.ch01.batch.ImportProductsJobListener" />
		
	<bean id="importProductStepSkipListener"
		class="es.vikour.sbia.ch01.batch.ImportProductsStepSkipListener" />
	
	<bean id="importProductParamValidator"
		class="org.springframework.batch.core.job.DefaultJobParametersValidator">
		<property name="requiredKeys">
			<set>
				<value>inputResource</value>
				<value>targetDirectory</value>
				<value>targetFile</value>
			</set>
		</property>
	</bean>
	
	<bean id="decompressTasklet" scope="step"
		class="es.vikour.sbia.ch01.batch.DecompressTasklet">
		<property name="inputResource" value="#{jobParameters['inputResource']}" />
		<property name="targetDirectory" value="#{jobParameters['targetDirectory']}" />
		<property name="targetFile" value="#{jobParameters['targetFile']}" />
	</bean>
	
	<bean id="reader" scope="step"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		
		<property name="resource" 
			value="file:#{jobParameters['targetDirectory']+jobParameters['targetFile']}" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="PRODUCT_ID,NAME,DESCRIPTION,PRICE" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="es.vikour.sbia.ch01.batch.ProductFieldSetMapper" />
				</property>
			</bean>
		</property>
	
	</bean>
	
	<bean id="writer" class="es.vikour.sbia.ch01.batch.ProductJdbcItemWriter">
		<constructor-arg ref="dataSource" />
	</bean>
		
	<bean id="cleanUpTasklet" scope="step"
		class="es.vikour.sbia.ch01.batch.CleanUpTasklet">
		<property name="targetDirectory" value="#{jobParameters['targetDirectory']}" />
	</bean>
</beans>
